# Fixed Dockerfile for Railway deployment
FROM golang:1.23-alpine AS builder

# Install ALL required build dependencies for go-git and crypto
RUN apk add --no-cache \
    gcc \
    musl-dev \
    git \
    ca-certificates \
    make \
    pkgconfig

WORKDIR /app

# Copy dependency files first for better caching
COPY go.mod go.sum ./

# Download dependencies
RUN go mod download

# Copy source code
COPY . .

# Build with proper flags for your dependencies
RUN CGO_ENABLED=1 \
    GOOS=linux \
    GOARCH=amd64 \
    go build \
    -ldflags="-w -s" \
    -o out \
    .

# Production image
FROM alpine:latest

# Install runtime dependencies
RUN apk --no-cache add \
    ca-certificates \
    git \
    tzdata

WORKDIR /app

# Copy binary and templates
COPY --from=builder /app/out .
COPY --from=builder /app/templates ./templates

# Create data directory
RUN mkdir -p data

# Expose port
EXPOSE 5000

# Health check
HEALTHCHECK --interval=30s --timeout=3s --start-period=5s --retries=3 \
    CMD wget --no-verbose --tries=1 --spider http://localhost:5000/health || exit 1

# Start application
CMD ["./out"]